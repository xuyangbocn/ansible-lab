- name: Does prelink file exist
  stat:
    path: /etc/sysconfig/prelink
  register: prelink_exists
  tags:
  - disable_prelink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27078-5
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.13.11
  - PCI-DSS-Req-11.5
  - CJIS-5.10.1.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - disable_prelink | bool
  - low_disruption | bool
  - low_complexity | bool

- name: disable prelinking
  lineinfile:
    path: /etc/sysconfig/prelink
    regexp: ^PRELINKING=
    line: PRELINKING=no
  when:
  - prelink_exists.stat.exists
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - disable_prelink | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - disable_prelink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27078-5
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.13.11
  - PCI-DSS-Req-11.5
  - CJIS-5.10.1.3

- name: Ensure aide is installed
  package:
    name: aide
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - package_aide_installed | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_aide_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27096-7
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-11.5
  - CJIS-5.10.1.3

- name: Ensure AIDE is installed
  package:
    name: '{{ item }}'
    state: present
  with_items:
  - aide
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - aide_periodic_cron_checking | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - aide_periodic_cron_checking
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-26952-2
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-11.5
  - CJIS-5.10.1.3
  - DISA-STIG-RHEL-07-020030

- name: Configure Periodic Execution of AIDE
  cron:
    name: run AIDE check
    minute: 5
    hour: 4
    weekday: 0
    user: root
    job: /usr/sbin/aide --check
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - aide_periodic_cron_checking | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - aide_periodic_cron_checking
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-26952-2
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-11.5
  - CJIS-5.10.1.3
  - DISA-STIG-RHEL-07-020030

- name: Check existence of yum on Fedora
  stat:
    path: /etc/yum.conf
  register: yum_config_file
  check_mode: false
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26989-4
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-020050

- name: Ensure GPG check is globally activated (yum)
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: gpgcheck
    value: 1
    create: false
  when:
  - (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists)
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26989-4
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-020050

- name: Ensure GPG check is globally activated (dnf)
  ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: gpgcheck
    value: 1
    create: false
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26989-4
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-020050

- name: Security patches are up to date
  package:
    name: '*'
    state: latest
  tags:
  - security_patches_up_to_date
  - high_severity
  - skip_ansible_lint
  - patch_strategy
  - low_complexity
  - high_disruption
  - reboot_required
  - CCE-26895-3
  - NIST-800-53-SI-2(5)
  - NIST-800-53-SI-2(c)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-020260
  when:
  - security_patches_up_to_date | bool
  - reboot_required | bool
  - high_severity | bool
  - skip_ansible_lint | bool
  - high_disruption | bool
  - patch_strategy | bool
  - low_complexity | bool

- name: Read permission of GPG key directory
  stat:
    path: /etc/pki/rpm-gpg/
  register: gpg_key_directory_permission
  check_mode: false
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26957-1
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Read signatures in GPG key
  command: gpg --with-fingerprint --with-colons "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
  args:
    warn: false
  changed_when: false
  register: gpg_fingerprints
  check_mode: false
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26957-1
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Set Fact - Installed GPG Fingerprints
  set_fact:
    gpg_installed_fingerprints: '{{ gpg_fingerprints.stdout | regex_findall(''^pub.*

      (?:^fpr[:]*)([0-9A-Fa-f]*)'', ''\1'') | list }}'
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26957-1
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Set Fact - Valid fingerprints
  set_fact:
    gpg_valid_fingerprints: ("567E347AD0044ADE55BA8A5F199E2F91FD431D51" "43A6E49C4A38F4BE9ABF2A5345689C882FA658E0")
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26957-1
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Import RedHat GPG key
  rpm_key:
    state: present
    key: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
  when:
  - gpg_key_directory_permission.stat.mode <= '0755'
  - (gpg_installed_fingerprints | difference(gpg_valid_fingerprints)) | length == 0
  - gpg_installed_fingerprints | length > 0
  - ansible_distribution == "RedHat"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26957-1
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1

- name: Enable service auditd
  block:
  - name: Gather the package facts
    package_facts:
      manager: auto
  - name: Enable service auditd
    service:
      name: auditd
      enabled: 'yes'
      state: started
    when:
    - '"audit" in ansible_facts.packages'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - high_severity | bool
  - enable_strategy | bool
  - service_auditd_enabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_auditd_enabled
  - high_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27407-6
  - NIST-800-53-AC-2(g)
  - NIST-800-53-AU-3
  - NIST-800-53-AU-10
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.1
  - NIST-800-171-3.3.2
  - NIST-800-171-3.3.6
  - PCI-DSS-Req-10.1
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030000

- name: check audit argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*audit=' /etc/default/grub
  failed_when: false
  register: argcheck
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-27212-0
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-10
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IR-5(1)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: replace existing audit argument
  replace:
    path: /etc/default/grub
    regexp: audit=.
    replace: audit=1
  when:
  - argcheck.rc == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-27212-0
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-10
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IR-5(1)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: add audit argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 audit=1"
  when:
  - argcheck.rc != 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-27212-0
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-10
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IR-5(1)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="audit=1"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-27212-0
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-10
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IR-5(1)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: Configure auditd admin_space_left Action on Low Disk Space
  lineinfile:
    dest: /etc/audit/auditd.conf
    line: admin_space_left_action = {{ var_auditd_admin_space_left_action }}
    regexp: ^\s*admin_space_left_action\s*=\s*.*$
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - restrict_strategy | bool
  - auditd_data_retention_admin_space_left_action | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - auditd_data_retention_admin_space_left_action
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27370-6
  - NIST-800-53-AU-5(b)
  - NIST-800-53-AU-5(2)
  - NIST-800-53-AU-5(1)
  - NIST-800-53-AU-5(4)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.7
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030340

- name: Configure auditd mail_acct Action on Low Disk Space
  lineinfile:
    dest: /etc/audit/auditd.conf
    line: action_mail_acct = {{ var_auditd_action_mail_acct }}
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - auditd_data_retention_action_mail_acct | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - auditd_data_retention_action_mail_acct
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27394-6
  - NIST-800-53-IA-5(1)
  - NIST-800-53-AU-5(a)
  - NIST-800-53-AU-5(2)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.7.a
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030350

- name: Configure auditd max_log_file_action Upon Reaching Maximum Log Size
  lineinfile:
    dest: /etc/audit/auditd.conf
    line: max_log_file_action = {{ var_auditd_max_log_file_action }}
    regexp: ^\s*max_log_file_action\s*=\s*.*$
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - auditd_data_retention_max_log_file_action | bool
  - low_complexity | bool
  tags:
  - auditd_data_retention_max_log_file_action
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27231-0
  - NIST-800-53-AU-5(b)
  - NIST-800-53-AU-5(2)
  - NIST-800-53-AU-5(1)
  - NIST-800-53-AU-5(4)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.7
  - CJIS-5.4.1.1

- name: Configure auditd Max Log File Size
  lineinfile:
    dest: /etc/audit/auditd.conf
    regexp: ^\s*max_log_file\s*=\s*.*$
    line: max_log_file = {{ var_auditd_max_log_file }}
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - auditd_data_retention_max_log_file | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - auditd_data_retention_max_log_file
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27319-3
  - NIST-800-53-AU-11
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.7
  - CJIS-5.4.1.1

- name: Set architecture for audit group tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80433-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030871

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_group
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80433-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030871

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_group.matched is defined and find_group.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80433-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030871

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_group.files | map(attribute=''path'') | list | first }}'
  when:
  - find_group.matched is defined and find_group.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80433-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030871

- name: Inserts/replaces the group rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/group -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80433-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030871

- name: Inserts/replaces the group rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/group -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80433-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030871

- name: Set architecture for audit shadow tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80431-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030873

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_shadow
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80431-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030873

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_shadow.matched is defined and find_shadow.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80431-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030873

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_shadow.files | map(attribute=''path'') | list | first }}'
  when:
  - find_shadow.matched is defined and find_shadow.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80431-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030873

- name: Inserts/replaces the shadow rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80431-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030873

- name: Inserts/replaces the shadow rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80431-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030873

- name: Set architecture for audit gshadow tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80432-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030872

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_gshadow
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80432-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030872

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_gshadow.matched is defined and find_gshadow.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80432-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030872

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_gshadow.files | map(attribute=''path'') | list | first }}'
  when:
  - find_gshadow.matched is defined and find_gshadow.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80432-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030872

- name: Inserts/replaces the gshadow rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80432-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030872

- name: Inserts/replaces the gshadow rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80432-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030872

- name: Set architecture for audit passwd tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80435-1
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030870

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_passwd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80435-1
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030870

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_passwd.matched is defined and find_passwd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80435-1
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030870

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_passwd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_passwd.matched is defined and find_passwd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80435-1
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030870

- name: Inserts/replaces the passwd rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80435-1
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030870

- name: Inserts/replaces the passwd rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80435-1
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030870

- name: Set architecture for audit opasswd tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80430-2
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030874

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_opasswd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80430-2
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030874

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_opasswd.matched is defined and find_opasswd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80430-2
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030874

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_opasswd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_opasswd.matched is defined and find_opasswd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80430-2
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030874

- name: Inserts/replaces the opasswd rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80430-2
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030874

- name: Inserts/replaces the opasswd rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80430-2
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030874

- name: Set architecture for audit renameat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80413-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030890

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_renameat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80413-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030890

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - find_renameat.matched is defined and find_renameat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80413-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030890

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_renameat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_renameat.matched is defined and find_renameat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80413-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030890

- name: Inserts/replaces the renameat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80413-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030890

- name: Inserts/replaces the renameat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80413-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030890

- name: Inserts/replaces the renameat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80413-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030890

- name: Inserts/replaces the renameat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80413-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030890

- name: Set architecture for audit unlinkat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80662-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030920

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_unlinkat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80662-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030920

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - find_unlinkat.matched is defined and find_unlinkat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80662-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030920

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_unlinkat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_unlinkat.matched is defined and find_unlinkat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80662-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030920

- name: Inserts/replaces the unlinkat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80662-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030920

- name: Inserts/replaces the unlinkat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80662-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030920

- name: Inserts/replaces the unlinkat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80662-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030920

- name: Inserts/replaces the unlinkat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80662-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030920

- name: Set architecture for audit rmdir tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80412-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030900

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_rmdir
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80412-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030900

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - find_rmdir.matched is defined and find_rmdir.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80412-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030900

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_rmdir.files | map(attribute=''path'') | list | first }}'
  when:
  - find_rmdir.matched is defined and find_rmdir.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80412-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030900

- name: Inserts/replaces the rmdir rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80412-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030900

- name: Inserts/replaces the rmdir rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80412-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030900

- name: Inserts/replaces the rmdir rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80412-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030900

- name: Inserts/replaces the rmdir rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80412-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030900

- name: Set architecture for audit unlink tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80996-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030910

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_unlink
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80996-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030910

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - find_unlink.matched is defined and find_unlink.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80996-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030910

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_unlink.files | map(attribute=''path'') | list | first }}'
  when:
  - find_unlink.matched is defined and find_unlink.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80996-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030910

- name: Inserts/replaces the unlink rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80996-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030910

- name: Inserts/replaces the unlink rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80996-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030910

- name: Inserts/replaces the unlink rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80996-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030910

- name: Inserts/replaces the unlink rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80996-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030910

- name: Set architecture for audit rename tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80995-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030880

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_rename
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80995-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030880

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - find_rename.matched is defined and find_rename.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80995-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030880

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_rename.files | map(attribute=''path'') | list | first }}'
  when:
  - find_rename.matched is defined and find_rename.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80995-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030880

- name: Inserts/replaces the rename rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S rename -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80995-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030880

- name: Inserts/replaces the rename rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S rename -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80995-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030880

- name: Inserts/replaces the rename rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S rename -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80995-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030880

- name: Inserts/replaces the rename rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S rename -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80995-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7
  - DISA-STIG-RHEL-07-030880

- name: Search for privileged commands
  shell: find / -xdev -type f -perm -4000 -o -type f -perm -2000 2>/dev/null
  args:
    warn: false
    executable: /bin/bash
  check_mode: false
  register: find_result
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27437-3
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030360

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path={{ item }} .*$
    patterns: '*.rules'
  with_items:
  - '{{ find_result.stdout_lines }}'
  register: files_result
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27437-3
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030360

- name: Overwrites the rule in rules.d
  lineinfile:
    path: '{{ item.1.path }}'
    line: -a always,exit -F path={{ item.0.item }} -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
    create: false
    regexp: ^.*path={{ item.0.item }} .*$
  with_subelements:
  - '{{ files_result.results }}'
  - files
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27437-3
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030360

- name: Adds the rule in rules.d
  lineinfile:
    path: /etc/audit/rules.d/privileged.rules
    line: -a always,exit -F path={{ item.item }} -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
    create: true
  with_items:
  - '{{ files_result.results }}'
  when:
  - files_result.results is defined and item.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27437-3
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030360

- name: Inserts/replaces the rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path={{ item.item }} -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
    create: true
    regexp: ^.*path={{ item.item }} .*$
  with_items:
  - '{{ files_result.results }}'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27437-3
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030360

- name: Set architecture for audit truncate tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80389-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030540

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_truncate
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80389-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030540

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_truncate.matched is defined and find_truncate.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80389-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030540

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_truncate.files | map(attribute=''path'') | list | first }}'
  when:
  - find_truncate.matched is defined and find_truncate.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80389-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030540

- name: Inserts/replaces the truncate rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80389-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030540

- name: Inserts/replaces the truncate rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80389-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030540

- name: Inserts/replaces the truncate rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80389-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030540

- name: Inserts/replaces the truncate rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80389-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030540

- name: Set architecture for audit open tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80386-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030510

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_open
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80386-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030510

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_open.matched is defined and find_open.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80386-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030510

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open.matched is defined and find_open.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80386-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030510

- name: Inserts/replaces the open rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80386-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030510

- name: Inserts/replaces the open rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80386-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030510

- name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80386-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030510

- name: Inserts/replaces the open rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80386-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030510

- name: Add unsuccessful file operations audit rules
  blockinfile:
    path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
    create: true
    block: '## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.

      ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

      ## The purpose of these rules is to meet the requirements for Operating

      ## System Protection Profile (OSPP)v4.2. These rules depends on having

      ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

      ## Unsuccessful file creation (open with O_CREAT)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      ## Unsuccessful file modifications (open for write or truncate)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      ## Unsuccessful file access (any other opens) This has to go last.

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_creat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80385-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030500

- name: Set architecture for audit open_by_handle_at tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80388-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030530

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_open_by_handle_at
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80388-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030530

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80388-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030530

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80388-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030530

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80388-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030530

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80388-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030530

- name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80388-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030530

- name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80388-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030530

- name: Set architecture for audit openat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80387-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030520

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_openat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80387-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030520

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_openat.matched is defined and find_openat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80387-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030520

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_openat.matched is defined and find_openat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80387-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030520

- name: Inserts/replaces the openat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80387-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030520

- name: Inserts/replaces the openat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80387-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030520

- name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80387-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030520

- name: Inserts/replaces the openat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80387-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030520

- name: Set architecture for audit ftruncate tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80390-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030550

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_ftruncate
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80390-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030550

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_ftruncate.matched is defined and find_ftruncate.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80390-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030550

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_ftruncate.files | map(attribute=''path'') | list | first }}'
  when:
  - find_ftruncate.matched is defined and find_ftruncate.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80390-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030550

- name: Inserts/replaces the ftruncate rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80390-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030550

- name: Inserts/replaces the ftruncate rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80390-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030550

- name: Inserts/replaces the ftruncate rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80390-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030550

- name: Inserts/replaces the ftruncate rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80390-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - DISA-STIG-RHEL-07-030550

- name: Set architecture for audit fremovexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27353-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030480

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fremovexattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27353-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030480

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fremovexattr.matched is defined and find_fremovexattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27353-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030480

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fremovexattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fremovexattr.matched is defined and find_fremovexattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27353-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030480

- name: Inserts/replaces the fremovexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27353-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030480

- name: Inserts/replaces the fremovexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27353-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030480

- name: Inserts/replaces the fremovexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27353-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030480

- name: Inserts/replaces the fremovexattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27353-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030480

- name: Set architecture for audit fchmod tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27393-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030420

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchmod
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27393-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030420

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fchmod.matched is defined and find_fchmod.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27393-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030420

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchmod.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchmod.matched is defined and find_fchmod.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27393-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030420

- name: Inserts/replaces the fchmod rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27393-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030420

- name: Inserts/replaces the fchmod rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27393-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030420

- name: Inserts/replaces the fchmod rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27393-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030420

- name: Inserts/replaces the fchmod rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27393-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030420

- name: Set architecture for audit chown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27364-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030370

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_chown
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27364-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030370

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_chown.matched is defined and find_chown.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27364-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030370

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chown.files | map(attribute=''path'') | list | first }}'
  when:
  - find_chown.matched is defined and find_chown.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27364-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030370

- name: Inserts/replaces the chown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27364-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030370

- name: Inserts/replaces the chown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27364-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030370

- name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27364-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030370

- name: Inserts/replaces the chown rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27364-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030370

- name: Set architecture for audit removexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27367-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030470

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_removexattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27367-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030470

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_removexattr.matched is defined and find_removexattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27367-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030470

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_removexattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_removexattr.matched is defined and find_removexattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27367-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030470

- name: Inserts/replaces the removexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27367-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030470

- name: Inserts/replaces the removexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27367-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030470

- name: Inserts/replaces the removexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27367-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030470

- name: Inserts/replaces the removexattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27367-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030470

- name: Set architecture for audit fsetxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27389-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030450

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fsetxattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27389-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030450

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fsetxattr.matched is defined and find_fsetxattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27389-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030450

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fsetxattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fsetxattr.matched is defined and find_fsetxattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27389-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030450

- name: Inserts/replaces the fsetxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27389-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030450

- name: Inserts/replaces the fsetxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27389-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030450

- name: Inserts/replaces the fsetxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27389-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030450

- name: Inserts/replaces the fsetxattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27389-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030450

- name: Set architecture for audit chmod tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27339-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030410

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_chmod
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27339-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030410

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_chmod.matched is defined and find_chmod.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27339-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030410

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chmod.files | map(attribute=''path'') | list | first }}'
  when:
  - find_chmod.matched is defined and find_chmod.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27339-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030410

- name: Inserts/replaces the chmod rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27339-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030410

- name: Inserts/replaces the chmod rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27339-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030410

- name: Inserts/replaces the chmod rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27339-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030410

- name: Inserts/replaces the chmod rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27339-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030410

- name: Set architecture for audit lsetxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27280-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030460

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lsetxattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27280-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030460

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_lsetxattr.matched is defined and find_lsetxattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27280-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030460

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lsetxattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_lsetxattr.matched is defined and find_lsetxattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27280-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030460

- name: Inserts/replaces the lsetxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27280-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030460

- name: Inserts/replaces the lsetxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27280-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030460

- name: Inserts/replaces the lsetxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27280-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030460

- name: Inserts/replaces the lsetxattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27280-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030460

- name: Set architecture for audit fchown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27356-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030380

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchown
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27356-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030380

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fchown.matched is defined and find_fchown.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27356-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030380

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchown.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchown.matched is defined and find_fchown.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27356-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030380

- name: Inserts/replaces the fchown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27356-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030380

- name: Inserts/replaces the fchown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27356-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030380

- name: Inserts/replaces the fchown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27356-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030380

- name: Inserts/replaces the fchown rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27356-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030380

- name: Set architecture for audit setxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27213-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030440

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_setxattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27213-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030440

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_setxattr.matched is defined and find_setxattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27213-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030440

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_setxattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_setxattr.matched is defined and find_setxattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27213-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030440

- name: Inserts/replaces the setxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27213-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030440

- name: Inserts/replaces the setxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27213-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030440

- name: Inserts/replaces the setxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27213-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030440

- name: Inserts/replaces the setxattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27213-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030440

- name: Set architecture for audit lchown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27083-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030390

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lchown
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27083-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030390

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_lchown.matched is defined and find_lchown.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27083-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030390

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lchown.files | map(attribute=''path'') | list | first }}'
  when:
  - find_lchown.matched is defined and find_lchown.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27083-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030390

- name: Inserts/replaces the lchown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27083-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030390

- name: Inserts/replaces the lchown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27083-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030390

- name: Inserts/replaces the lchown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27083-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030390

- name: Inserts/replaces the lchown rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27083-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030390

- name: Set architecture for audit fchmodat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27388-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030430

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchmodat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27388-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030430

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fchmodat.matched is defined and find_fchmodat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27388-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030430

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchmodat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchmodat.matched is defined and find_fchmodat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27388-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030430

- name: Inserts/replaces the fchmodat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27388-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030430

- name: Inserts/replaces the fchmodat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27388-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030430

- name: Inserts/replaces the fchmodat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27388-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030430

- name: Inserts/replaces the fchmodat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27388-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030430

- name: Set architecture for audit fchownat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27387-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030400

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchownat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27387-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030400

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fchownat.matched is defined and find_fchownat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27387-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030400

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchownat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchownat.matched is defined and find_fchownat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27387-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030400

- name: Inserts/replaces the fchownat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27387-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030400

- name: Inserts/replaces the fchownat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27387-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030400

- name: Inserts/replaces the fchownat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27387-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030400

- name: Inserts/replaces the fchownat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27387-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030400

- name: Set architecture for audit lremovexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27410-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030490

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lremovexattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27410-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030490

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_lremovexattr.matched is defined and find_lremovexattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27410-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030490

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lremovexattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_lremovexattr.matched is defined and find_lremovexattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27410-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030490

- name: Inserts/replaces the lremovexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27410-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030490

- name: Inserts/replaces the lremovexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27410-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030490

- name: Inserts/replaces the lremovexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27410-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030490

- name: Inserts/replaces the lremovexattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27410-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030490

- name: Ensure kernel module 'sctp' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/sctp.conf
    regexp: sctp
    line: install sctp /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - kernel_module_sctp_disabled | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - kernel_module_sctp_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-82044-9
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.6
  - CJIS-5.10.1

- name: Ensure kernel module 'dccp' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/dccp.conf
    regexp: dccp
    line: install dccp /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - kernel_module_dccp_disabled | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - kernel_module_dccp_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-82024-1
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.6
  - CJIS-5.10.1
  - DISA-STIG-RHEL-07-020101

- name: Ensure sysctl net.ipv4.conf.default.rp_filter is set
  sysctl:
    name: net.ipv4.conf.default.rp_filter
    value: '{{ sysctl_net_ipv4_conf_default_rp_filter_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv4_conf_default_rp_filter | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_rp_filter
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80168-8
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.default.log_martians is set
  sysctl:
    name: net.ipv4.conf.default.log_martians
    value: '{{ sysctl_net_ipv4_conf_default_log_martians_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - sysctl_net_ipv4_conf_default_log_martians | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_log_martians
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80161-3
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5(3)(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.all.log_martians is set
  sysctl:
    name: net.ipv4.conf.all.log_martians
    value: '{{ sysctl_net_ipv4_conf_all_log_martians_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv4_conf_all_log_martians | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_log_martians
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80160-5
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5(3)(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
  sysctl:
    name: net.ipv4.conf.all.accept_redirects
    value: '{{ sysctl_net_ipv4_conf_all_accept_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv4_conf_all_accept_redirects | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_accept_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80158-9
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1
  - DISA-STIG-RHEL-07-040641

- name: Ensure sysctl net.ipv4.icmp_ignore_bogus_error_responses is set
  sysctl:
    name: net.ipv4.icmp_ignore_bogus_error_responses
    value: '{{ sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_disruption | bool
  - sysctl_net_ipv4_icmp_ignore_bogus_error_responses | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_icmp_ignore_bogus_error_responses
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80166-2
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.default.secure_redirects is set
  sysctl:
    name: net.ipv4.conf.default.secure_redirects
    value: '{{ sysctl_net_ipv4_conf_default_secure_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_net_ipv4_conf_default_secure_redirects | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_secure_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80164-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.all.accept_source_route is set
  sysctl:
    name: net.ipv4.conf.all.accept_source_route
    value: '{{ sysctl_net_ipv4_conf_all_accept_source_route_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_net_ipv4_conf_all_accept_source_route | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_accept_source_route
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-27434-0
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20
  - DISA-STIG-RHEL-07-040610

- name: Ensure sysctl net.ipv4.conf.all.rp_filter is set
  sysctl:
    name: net.ipv4.conf.all.rp_filter
    value: '{{ sysctl_net_ipv4_conf_all_rp_filter_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - sysctl_net_ipv4_conf_all_rp_filter | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_rp_filter
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80167-0
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.all.secure_redirects is set
  sysctl:
    name: net.ipv4.conf.all.secure_redirects
    value: '{{ sysctl_net_ipv4_conf_all_secure_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv4_conf_all_secure_redirects | bool
  - reboot_required | bool
  - disable_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_secure_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80159-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
  sysctl:
    name: net.ipv4.icmp_echo_ignore_broadcasts
    value: '{{ sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_net_ipv4_icmp_echo_ignore_broadcasts | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_icmp_echo_ignore_broadcasts
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80165-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1
  - DISA-STIG-RHEL-07-040630

- name: Ensure sysctl net.ipv4.tcp_syncookies is set
  sysctl:
    name: net.ipv4.tcp_syncookies
    value: '{{ sysctl_net_ipv4_tcp_syncookies_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_net_ipv4_tcp_syncookies | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_tcp_syncookies
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-27495-1
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5(1)
  - NIST-800-53-SC-5(2)
  - NIST-800-53-SC-5(3)(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1

- name: Ensure sysctl net.ipv4.conf.default.accept_source_route is set
  sysctl:
    name: net.ipv4.conf.default.accept_source_route
    value: '{{ sysctl_net_ipv4_conf_default_accept_source_route_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv4_conf_default_accept_source_route | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_accept_source_route
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80162-1
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1
  - DISA-STIG-RHEL-07-040620

- name: Ensure sysctl net.ipv4.conf.default.accept_redirects is set
  sysctl:
    name: net.ipv4.conf.default.accept_redirects
    value: '{{ sysctl_net_ipv4_conf_default_accept_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv4_conf_default_accept_redirects | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_accept_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80163-9
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1
  - DISA-STIG-RHEL-07-040640

- name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
  sysctl:
    name: net.ipv4.conf.default.send_redirects
    value: '0'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_net_ipv4_conf_default_send_redirects | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_send_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80999-6
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1
  - DISA-STIG-RHEL-07-040650

- name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
  sysctl:
    name: net.ipv4.conf.all.send_redirects
    value: '0'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_net_ipv4_conf_all_send_redirects | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_send_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80156-3
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1
  - DISA-STIG-RHEL-07-040660

- name: Ensure sysctl net.ipv4.ip_forward is set to 0
  sysctl:
    name: net.ipv4.ip_forward
    value: '0'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv4_ip_forward | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_ip_forward
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80157-1
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20
  - DISA-STIG-RHEL-07-040740

- name: Ensure sysctl net.ipv6.conf.all.disable_ipv6 is set to 1
  sysctl:
    name: net.ipv6.conf.all.disable_ipv6
    value: '1'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - sysctl_net_ipv6_conf_all_disable_ipv6 | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_all_disable_ipv6
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80175-3
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.all.accept_redirects is set
  sysctl:
    name: net.ipv6.conf.all.accept_redirects
    value: '{{ sysctl_net_ipv6_conf_all_accept_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv6_conf_all_accept_redirects | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_all_accept_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80182-9
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.all.accept_ra is set
  sysctl:
    name: net.ipv6.conf.all.accept_ra
    value: '{{ sysctl_net_ipv6_conf_all_accept_ra_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv6_conf_all_accept_ra | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_all_accept_ra
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80180-3
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.default.accept_redirects is set
  sysctl:
    name: net.ipv6.conf.default.accept_redirects
    value: '{{ sysctl_net_ipv6_conf_default_accept_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_net_ipv6_conf_default_accept_redirects | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_default_accept_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80183-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.default.accept_ra is set
  sysctl:
    name: net.ipv6.conf.default.accept_ra
    value: '{{ sysctl_net_ipv6_conf_default_accept_ra_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv6_conf_default_accept_ra | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_default_accept_ra
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80181-1
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.20

- name: Ensure setroubleshoot is removed
  package:
    name: setroubleshoot
    state: absent
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - package_setroubleshoot_removed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_setroubleshoot_removed
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80444-3

- name: Ensure mcstrans is removed
  package:
    name: mcstrans
    state: absent
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - package_mcstrans_removed | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_mcstrans_removed
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80445-0

- name: Ensure SELinux State is Enforcing
  lineinfile:
    path: /etc/sysconfig/selinux
    regexp: ^SELINUX=
    line: SELINUX={{ var_selinux_state }}
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - low_disruption | bool
  - selinux_state | bool
  - low_complexity | bool
  tags:
  - selinux_state
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27334-2
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)(a)
  - NIST-800-53-AU-9
  - NIST-800-53-SC-7(21)
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2
  - DISA-STIG-RHEL-07-020210

- name: Configure SELinux Policy
  lineinfile:
    path: /etc/sysconfig/selinux
    regexp: ^SELINUXTYPE=
    line: SELINUXTYPE={{ var_selinux_policy_name }}
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - selinux_policytype | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - selinux_policytype
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27279-9
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)(a)
  - NIST-800-53-AU-9
  - NIST-800-53-SC-7(21)
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2
  - DISA-STIG-RHEL-07-020220

- name: Ensure SELinux Not Disabled in /etc/default/grub
  replace:
    dest: /etc/default/grub
    regexp: selinux=0
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - grub2_enable_selinux | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - grub2_enable_selinux
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-26961-3
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)(a)
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2

- name: Set Account Expiration Following Inactivity
  lineinfile:
    create: true
    dest: /etc/default/useradd
    regexp: ^INACTIVE
    line: INACTIVE={{ var_account_disable_post_pw_expiration }}
  tags:
  - account_disable_post_pw_expiration
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27355-7
  - NIST-800-53-IA-4(e)
  - NIST-800-53-AC-2(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.5.6
  - PCI-DSS-Req-8.1.4
  - CJIS-5.6.2.1.1
  - DISA-STIG-RHEL-07-010310
  when:
  - account_disable_post_pw_expiration | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Test for existence of /etc/securetty
  stat:
    path: /etc/securetty
  register: securetty_empty
  tags:
  - no_direct_root_logins
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27294-8
  - NIST-800-53-IA-2
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.6
  when:
  - no_direct_root_logins | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Direct root Logins Not Allowed
  copy:
    dest: /etc/securetty
    content: ''
  when:
  - securetty_empty.stat.size > 1
  - no_direct_root_logins | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - no_direct_root_logins
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27294-8
  - NIST-800-53-IA-2
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.6

- name: Set Password Warning Age
  lineinfile:
    dest: /etc/login.defs
    regexp: ^PASS_WARN_AGE *[0-9]*
    state: present
    line: PASS_WARN_AGE        {{ var_accounts_password_warn_age_login_defs }}
    create: true
  tags:
  - accounts_password_warn_age_login_defs
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82016-7
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(d)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.5.8
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_warn_age_login_defs | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set Password Maximum Age
  lineinfile:
    create: true
    dest: /etc/login.defs
    regexp: ^#?PASS_MAX_DAYS
    line: PASS_MAX_DAYS {{ var_accounts_maximum_age_login_defs }}
  tags:
  - accounts_maximum_age_login_defs
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27051-2
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(d)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.5.6
  - PCI-DSS-Req-8.2.4
  - CJIS-5.6.2.1
  - DISA-STIG-RHEL-07-010250
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_maximum_age_login_defs | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set Password Minimum Age
  lineinfile:
    create: true
    dest: /etc/login.defs
    regexp: ^#?PASS_MIN_DAYS
    line: PASS_MIN_DAYS {{ var_accounts_minimum_age_login_defs }}
  tags:
  - accounts_minimum_age_login_defs
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82036-5
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(d)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.5.8
  - CJIS-5.6.2.1.1
  - DISA-STIG-RHEL-07-010230
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_minimum_age_login_defs | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable ucredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*ucredit
    line: ucredit = {{ var_password_pam_ucredit }}
  tags:
  - accounts_password_pam_ucredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27200-5
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(4)
  - PCI-DSS-Req-8.2.3
  - DISA-STIG-RHEL-07-010120
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_pam_ucredit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable lcredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*lcredit
    line: lcredit = {{ var_password_pam_lcredit }}
  tags:
  - accounts_password_pam_lcredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27345-8
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(4)
  - PCI-DSS-Req-8.2.3
  - DISA-STIG-RHEL-07-010130
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_pam_lcredit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable minlen is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*minlen
    line: minlen = {{ var_password_pam_minlen }}
  tags:
  - accounts_password_pam_minlen
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27293-0
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(4)
  - PCI-DSS-Req-8.2.3
  - CJIS-5.6.2.1.1
  - DISA-STIG-RHEL-07-010280
  when:
  - accounts_password_pam_minlen | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set Password Retry Prompts Permitted Per-Session - system-auth (change)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: (^.*\spam_pwquality.so\s.*retry\s*=\s*)(\S+)(.*$)
    replace: \g<1>{{ var_password_pam_retry }}\g<3>
  tags:
  - accounts_password_pam_retry
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-27160-1
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  - NIST-800-53-IA-5(4)
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010119
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - accounts_password_pam_retry | bool
  - low_complexity | bool

- name: Set Password Retry Prompts Permitted Per-Session - system-auth (add)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: ^.*\spam_pwquality.so\s(?!.*retry\s*=\s*).*$
    replace: \g<0> retry={{ var_password_pam_retry }}
  tags:
  - accounts_password_pam_retry
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-27160-1
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  - NIST-800-53-IA-5(4)
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010119
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - accounts_password_pam_retry | bool
  - low_complexity | bool

- name: Ensure PAM variable dcredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*dcredit
    line: dcredit = {{ var_password_pam_dcredit }}
  tags:
  - accounts_password_pam_dcredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27214-6
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(4)
  - PCI-DSS-Req-8.2.3
  - DISA-STIG-RHEL-07-010140
  when:
  - accounts_password_pam_dcredit | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock preauth deny before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27350-8
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add deny argument to auth pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27350-8
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock authfail deny after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: after
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27350-8
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add deny argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    new_type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27350-8
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27350-8
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock preauth unlock_time before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-26884-7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add unlock_time argument to pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-26884-7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock authfail unlock_interval after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: after
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-26884-7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add unlock_time argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-26884-7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-26884-7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Do not allow users to reuse recent passwords - system-auth (change)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: ^(password\s+sufficient\s+pam_unix\.so\s.*remember\s*=\s*)(\S+)(.*)$
    replace: \g<1>{{ var_password_pam_unix_remember }}\g<3>
  tags:
  - accounts_password_pam_unix_remember
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-82030-8
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(e)
  - NIST-800-171-3.5.8
  - PCI-DSS-Req-8.2.5
  - CJIS-5.6.2.1.1
  - DISA-STIG-RHEL-07-010270
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - accounts_password_pam_unix_remember | bool
  - low_complexity | bool

- name: Do not allow users to reuse recent passwords - system-auth (add)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: ^password\s+sufficient\s+pam_unix\.so\s(?!.*remember\s*=\s*).*$
    replace: \g<0> remember={{ var_password_pam_unix_remember }}
  tags:
  - accounts_password_pam_unix_remember
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-82030-8
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(e)
  - NIST-800-171-3.5.8
  - PCI-DSS-Req-8.2.5
  - CJIS-5.6.2.1.1
  - DISA-STIG-RHEL-07-010270
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - accounts_password_pam_unix_remember | bool
  - low_complexity | bool

- name: Enable GNOME3 Login Warning Banner
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/login-screen
    option: banner-message-enable
    value: 'true'
    create: true
  tags:
  - dconf_gnome_banner_enabled
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26970-4
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(b)
  - NIST-800-53-AC-8(c)
  - NIST-800-171-3.1.9
  - DISA-STIG-RHEL-07-010030
  when:
  - dconf_gnome_banner_enabled | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Prevent user modification of GNOME banner-message-enabled
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/login-screen/banner-message-enable
    line: /org/gnome/login-screen/banner-message-enable
    create: true
  tags:
  - dconf_gnome_banner_enabled
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26970-4
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(b)
  - NIST-800-53-AC-8(c)
  - NIST-800-171-3.1.9
  - DISA-STIG-RHEL-07-010030
  when:
  - dconf_gnome_banner_enabled | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Set the GNOME3 Login Warning Banner Text
  file:
    path: /etc/dconf/db/{{ item }}
    owner: root
    group: root
    mode: 493
    state: directory
  with_items:
  - gdm.d
  - gdm.d/locks
  tags:
  - dconf_gnome_login_banner_text
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26892-0
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(c)
  - NIST-800-171-3.1.9
  - DISA-STIG-RHEL-07-010040
  when:
  - dconf_gnome_login_banner_text | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Set the GNOME3 Login Warning Banner Text
  file:
    path: /etc/dconf/db/gdm.d/{{ item }}
    owner: root
    group: root
    mode: 420
    state: touch
  with_items:
  - 00-security-settings
  - locks/00-security-settings-lock
  tags:
  - dconf_gnome_login_banner_text
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26892-0
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(c)
  - NIST-800-171-3.1.9
  - DISA-STIG-RHEL-07-010040
  when:
  - dconf_gnome_login_banner_text | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Set the GNOME3 Login Warning Banner Text
  ini_file:
    dest: /etc/dconf/db/gdm.d/00-security-settings
    section: org/gnome/login-screen
    option: banner-message-text
    value: '{{ login_banner_text }}'
    create: true
  tags:
  - dconf_gnome_login_banner_text
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26892-0
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(c)
  - NIST-800-171-3.1.9
  - DISA-STIG-RHEL-07-010040
  when:
  - dconf_gnome_login_banner_text | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Prevent user modification of the GNOME3 Login Warning Banner Text
  lineinfile:
    path: /etc/dconf/db/gdm.d/locks/00-security-settings-lock
    regexp: ^org/gnome/login-screen/banner-message-text$
    line: org/gnome/login-screen/banner-message-text
    create: true
    state: present
  tags:
  - dconf_gnome_login_banner_text
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26892-0
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(c)
  - NIST-800-171-3.1.9
  - DISA-STIG-RHEL-07-010040
  when:
  - dconf_gnome_login_banner_text | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Set user umask in /etc/bashrc
  replace:
    path: /etc/bashrc
    regexp: umask.*
    replace: umask {{ var_accounts_user_umask }}
  tags:
  - accounts_umask_etc_bashrc
  - unknown_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80202-5
  - NIST-800-53-AC-6(1)
  - NIST-800-53-CM-6(a)
  when:
  - unknown_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_umask_etc_bashrc | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set user umask in /etc/profile
  replace:
    path: /etc/profile
    regexp: umask.*
    replace: umask {{ var_accounts_user_umask }}
  tags:
  - accounts_umask_etc_profile
  - unknown_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80204-1
  - NIST-800-53-AC-6(1)
  - NIST-800-53-CM-6(a)
  when:
  - unknown_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_umask_etc_profile | bool
  - low_disruption | bool
  - low_complexity | bool

- name: require single user mode password
  lineinfile:
    create: true
    dest: /usr/lib/systemd/system/rescue.service
    regexp: ^#?ExecStart=
    line: ExecStart=-/bin/sh -c "/sbin/sulogin; /usr/bin/systemctl --fail --no-block default"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - require_singleuser_auth | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - require_singleuser_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27287-2
  - NIST-800-53-IA-2
  - NIST-800-53-AC-3
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.4.5
  - DISA-STIG-RHEL-07-010481

- name: Test for existence /boot/grub2/grub.cfg
  stat:
    path: /boot/grub2/grub.cfg
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_permissions_grub2_cfg | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82039-9
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5

- name: Ensure permission 0600 on /boot/grub2/grub.cfg
  file:
    path: /boot/grub2/grub.cfg
    mode: '0600'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_permissions_grub2_cfg | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82039-9
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5

- name: Test for existence /boot/grub2/grub.cfg
  stat:
    path: /boot/grub2/grub.cfg
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_owner_grub2_cfg | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82026-6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5
  - PCI-DSS-Req-7.1
  - CJIS-5.5.2.2

- name: Ensure owner 0 on /boot/grub2/grub.cfg
  file:
    path: /boot/grub2/grub.cfg
    owner: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_owner_grub2_cfg | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82026-6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5
  - PCI-DSS-Req-7.1
  - CJIS-5.5.2.2

- name: Test for existence /boot/grub2/grub.cfg
  stat:
    path: /boot/grub2/grub.cfg
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_groupowner_grub2_cfg | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82023-3
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5
  - PCI-DSS-Req-7.1
  - CJIS-5.5.2.2

- name: Ensure group owner 0 on /boot/grub2/grub.cfg
  file:
    path: /boot/grub2/grub.cfg
    group: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_groupowner_grub2_cfg | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82023-3
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5
  - PCI-DSS-Req-7.1
  - CJIS-5.5.2.2

- name: Ensure rsyslog is installed
  package:
    name: rsyslog
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - package_rsyslog_installed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_rsyslog_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80187-8
  - NIST-800-53-CM-6(a)

- name: Enable service rsyslog
  block:
  - name: Gather the package facts
    package_facts:
      manager: auto
  - name: Enable service rsyslog
    service:
      name: rsyslog
      enabled: 'yes'
      state: started
    when:
    - '"rsyslog" in ansible_facts.packages'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_rsyslog_enabled | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rsyslog_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80188-6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AU-4(1)

- name: Set rsyslog remote loghost
  lineinfile:
    dest: /etc/rsyslog.conf
    regexp: ^\*\.\*
    line: '*.* @@{{ rsyslog_remote_loghost_address }}'
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - rsyslog_remote_loghost | bool
  - low_complexity | bool
  tags:
  - rsyslog_remote_loghost
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27343-3
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AU-4(1)
  - NIST-800-53-AU-9(2)
  - DISA-STIG-RHEL-07-031000

- name: disable core dumps with limits
  lineinfile:
    dest: /etc/security/limits.conf
    regexp: ^[^#].*core
    line: '*        hard       core      0'
    create: true
  tags:
  - disable_users_coredumps
  - unknown_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80169-6
  when:
  - unknown_severity | bool
  - no_reboot_needed | bool
  - disable_users_coredumps | bool
  - restrict_strategy | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure sysctl fs.suid_dumpable is set to 0
  sysctl:
    name: fs.suid_dumpable
    value: '0'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_fs_suid_dumpable | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_fs_suid_dumpable
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-26900-1
  - NIST-800-53-SI-11(a)
  - NIST-800-53-SI-11(b)

- name: Ensure sysctl kernel.randomize_va_space is set to 2
  sysctl:
    name: kernel.randomize_va_space
    value: '2'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - sysctl_kernel_randomize_va_space | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_randomize_va_space
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-27127-0
  - NIST-800-53-SC-30
  - NIST-800-53-SC-30(2)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - DISA-STIG-RHEL-07-040201

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/var/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_var_tmp_nodev | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81052-3

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_var_tmp_nodev | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81052-3

- name: Ensure permission nodev are set on /var/tmp
  mount:
    path: /var/tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_var_tmp_nodev | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81052-3

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/dev/shm'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_dev_shm_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80152-2
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_dev_shm_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80152-2
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: Ensure permission nodev are set on /dev/shm
  mount:
    path: /dev/shm
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_dev_shm_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80152-2
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80150-6
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80150-6
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: Ensure permission noexec are set on /tmp
  mount:
    path: /tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},noexec'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80150-6
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - high_disruption | bool
  - low_complexity | bool
  tags:
  - mount_option_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80151-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - high_disruption | bool
  - low_complexity | bool
  tags:
  - mount_option_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80151-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: Ensure permission nosuid are set on /tmp
  mount:
    path: /tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - high_disruption | bool
  - low_complexity | bool
  tags:
  - mount_option_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80151-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/var/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_var_tmp_noexec | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82150-4

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_var_tmp_noexec | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82150-4

- name: Ensure permission noexec are set on /var/tmp
  mount:
    path: /var/tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},noexec'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_var_tmp_noexec | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82150-4

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '{{ var_removable_partition }}'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_nodev_removable_partitions | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_nodev_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80146-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_nodev_removable_partitions | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_nodev_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80146-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: Ensure permission nodev are set on var_removable_partition
  mount:
    path: '{{ var_removable_partition }}'
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_nodev_removable_partitions | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_nodev_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80146-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/var/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - mount_option_var_tmp_nosuid | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82153-8

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - mount_option_var_tmp_nosuid | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82153-8

- name: Ensure permission nosuid are set on /var/tmp
  mount:
    path: /var/tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - mount_option_var_tmp_nosuid | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82153-8

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/dev/shm'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80154-8
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80154-8
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: Ensure permission nosuid are set on /dev/shm
  mount:
    path: /dev/shm
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80154-8
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/dev/shm'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80153-0
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80153-0
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: Ensure permission noexec are set on /dev/shm
  mount:
    path: /dev/shm
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},noexec'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80153-0
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/home'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_home_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81047-3

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_home_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81047-3

- name: Ensure permission nodev are set on /home
  mount:
    path: /home
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_home_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81047-3

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '{{ var_removable_partition }}'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_nosuid_removable_partitions | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_nosuid_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80148-0
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7
  - DISA-STIG-RHEL-07-021010

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_nosuid_removable_partitions | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_nosuid_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80148-0
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7
  - DISA-STIG-RHEL-07-021010

- name: Ensure permission nosuid are set on var_removable_partition
  mount:
    path: '{{ var_removable_partition }}'
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_nosuid_removable_partitions | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_nosuid_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80148-0
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7
  - DISA-STIG-RHEL-07-021010

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nodev | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80149-8
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nodev | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80149-8
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: Ensure permission nodev are set on /tmp
  mount:
    path: /tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nodev | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80149-8
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '{{ var_removable_partition }}'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_noexec_removable_partitions | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_noexec_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80147-2
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_noexec_removable_partitions | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_noexec_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80147-2
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: Ensure permission noexec are set on var_removable_partition
  mount:
    path: '{{ var_removable_partition }}'
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},noexec'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_noexec_removable_partitions | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_noexec_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80147-2
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: Disable service autofs
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service autofs
    systemd:
      name: autofs.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"autofs.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_autofs_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_autofs_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27498-5
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MP-7
  - NIST-800-171-3.4.6
  - DISA-STIG-RHEL-07-020110

- name: Unit Socket Exists - autofs.socket
  command: systemctl list-unit-files autofs.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_autofs_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_autofs_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27498-5
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MP-7
  - NIST-800-171-3.4.6
  - DISA-STIG-RHEL-07-020110

- name: Disable socket autofs
  systemd:
    name: autofs.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"autofs.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_autofs_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_autofs_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27498-5
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MP-7
  - NIST-800-171-3.4.6
  - DISA-STIG-RHEL-07-020110

- name: Ensure kernel module 'freevxfs' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/freevxfs.conf
    regexp: freevxfs
    line: install freevxfs /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - kernel_module_freevxfs_disabled | bool
  - reboot_required | bool
  - low_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - kernel_module_freevxfs_disabled
  - low_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80138-1
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.6

- name: Ensure kernel module 'hfsplus' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/hfsplus.conf
    regexp: hfsplus
    line: install hfsplus /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - kernel_module_hfsplus_disabled | bool
  - low_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - kernel_module_hfsplus_disabled
  - low_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80141-5
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.6

- name: Ensure kernel module 'udf' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/udf.conf
    regexp: udf
    line: install udf /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - low_severity | bool
  - medium_disruption | bool
  - kernel_module_udf_disabled | bool
  - low_complexity | bool
  tags:
  - kernel_module_udf_disabled
  - low_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80143-1
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.6

- name: Ensure kernel module 'jffs2' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/jffs2.conf
    regexp: jffs2
    line: install jffs2 /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - low_severity | bool
  - kernel_module_jffs2_disabled | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - kernel_module_jffs2_disabled
  - low_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80139-9
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.6

- name: Ensure kernel module 'squashfs' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/squashfs.conf
    regexp: squashfs
    line: install squashfs /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - kernel_module_squashfs_disabled | bool
  - low_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - kernel_module_squashfs_disabled
  - low_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80142-3
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.6

- name: Ensure kernel module 'cramfs' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/cramfs.conf
    regexp: cramfs
    line: install cramfs /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - low_severity | bool
  - medium_disruption | bool
  - kernel_module_cramfs_disabled | bool
  - low_complexity | bool
  tags:
  - kernel_module_cramfs_disabled
  - low_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80137-3
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.6

- name: Ensure kernel module 'hfs' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/hfs.conf
    regexp: hfs
    line: install hfs /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - low_severity | bool
  - medium_disruption | bool
  - kernel_module_hfs_disabled | bool
  - low_complexity | bool
  tags:
  - kernel_module_hfs_disabled
  - low_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80140-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.6

- name: Test for existence /etc/group
  stat:
    path: /etc/group
  register: file_exists
  tags:
  - file_groupowner_etc_group
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82037-3
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_groupowner_etc_group | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure group owner 0 on /etc/group
  file:
    path: /etc/group
    group: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_groupowner_etc_group | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_etc_group
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82037-3
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2

- name: Test for existence /etc/passwd
  stat:
    path: /etc/passwd
  register: file_exists
  tags:
  - file_owner_etc_passwd
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82052-2
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - file_owner_etc_passwd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure owner 0 on /etc/passwd
  file:
    path: /etc/passwd
    owner: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - no_reboot_needed | bool
  - configure_strategy | bool
  - file_owner_etc_passwd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_etc_passwd
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82052-2
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2

- name: Test for existence /etc/passwd
  stat:
    path: /etc/passwd
  register: file_exists
  tags:
  - file_groupowner_etc_passwd
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-26639-5
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - file_groupowner_etc_passwd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure group owner 0 on /etc/passwd
  file:
    path: /etc/passwd
    group: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - no_reboot_needed | bool
  - configure_strategy | bool
  - file_groupowner_etc_passwd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_etc_passwd
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-26639-5
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2

- name: Test for existence /etc/group
  stat:
    path: /etc/group
  register: file_exists
  tags:
  - file_owner_etc_group
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82031-6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2
  when:
  - file_owner_etc_group | bool
  - configure_strategy | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure owner 0 on /etc/group
  file:
    path: /etc/group
    owner: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - file_owner_etc_group | bool
  - configure_strategy | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_etc_group
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82031-6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2

- name: Test for existence /etc/gshadow
  stat:
    path: /etc/gshadow
  register: file_exists
  tags:
  - file_groupowner_etc_gshadow
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82025-8
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - file_groupowner_etc_gshadow | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure group owner 0 on /etc/gshadow
  file:
    path: /etc/gshadow
    group: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - no_reboot_needed | bool
  - configure_strategy | bool
  - file_groupowner_etc_gshadow | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_etc_gshadow
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82025-8
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/gshadow
  stat:
    path: /etc/gshadow
  register: file_exists
  tags:
  - file_permissions_etc_gshadow
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82192-6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  when:
  - no_reboot_needed | bool
  - medium_severity | bool
  - configure_strategy | bool
  - file_permissions_etc_gshadow | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure permission 0000 on /etc/gshadow
  file:
    path: /etc/gshadow
    mode: '0000'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - no_reboot_needed | bool
  - medium_severity | bool
  - configure_strategy | bool
  - file_permissions_etc_gshadow | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_etc_gshadow
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82192-6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/group
  stat:
    path: /etc/group
  register: file_exists
  tags:
  - file_permissions_etc_group
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82032-4
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2
  when:
  - no_reboot_needed | bool
  - file_permissions_etc_group | bool
  - medium_severity | bool
  - configure_strategy | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure permission 0644 on /etc/group
  file:
    path: /etc/group
    mode: '0644'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - no_reboot_needed | bool
  - file_permissions_etc_group | bool
  - medium_severity | bool
  - configure_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_etc_group
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82032-4
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2

- name: Test for existence /etc/shadow
  stat:
    path: /etc/shadow
  register: file_exists
  tags:
  - file_owner_etc_shadow
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82022-5
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2
  when:
  - file_owner_etc_shadow | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure owner 0 on /etc/shadow
  file:
    path: /etc/shadow
    owner: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - file_owner_etc_shadow | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_etc_shadow
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82022-5
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2

- name: Test for existence /etc/shadow
  stat:
    path: /etc/shadow
  register: file_exists
  tags:
  - file_groupowner_etc_shadow
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82051-4
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_groupowner_etc_shadow | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure group owner 0 on /etc/shadow
  file:
    path: /etc/shadow
    group: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_groupowner_etc_shadow | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_etc_shadow
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82051-4
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2

- name: Test for existence /etc/shadow
  stat:
    path: /etc/shadow
  register: file_exists
  tags:
  - file_permissions_etc_shadow
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82042-3
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2
  when:
  - file_permissions_etc_shadow | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure permission 0000 on /etc/shadow
  file:
    path: /etc/shadow
    mode: '0000'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - file_permissions_etc_shadow | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_etc_shadow
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82042-3
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2

- name: Test for existence /etc/passwd
  stat:
    path: /etc/passwd
  register: file_exists
  tags:
  - file_permissions_etc_passwd
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82029-0
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - file_permissions_etc_passwd | bool
  - low_complexity | bool

- name: Ensure permission 0644 on /etc/passwd
  file:
    path: /etc/passwd
    mode: '0644'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - file_permissions_etc_passwd | bool
  - low_complexity | bool
  tags:
  - file_permissions_etc_passwd
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82029-0
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - PCI-DSS-Req-8.7.c
  - CJIS-5.5.2.2

- name: Test for existence /etc/gshadow
  stat:
    path: /etc/gshadow
  register: file_exists
  tags:
  - file_owner_etc_gshadow
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82195-9
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  when:
  - file_owner_etc_gshadow | bool
  - configure_strategy | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure owner 0 on /etc/gshadow
  file:
    path: /etc/gshadow
    owner: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - file_owner_etc_gshadow | bool
  - configure_strategy | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_etc_gshadow
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82195-9
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure xorg-x11-server-common is removed
  package:
    name: xorg-x11-server-common
    state: absent
  tags:
  - package_xorg-x11-server-common_removed
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27218-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - DISA-STIG-RHEL-07-040730
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Disable service smb
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service smb
    systemd:
      name: smb.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"smb.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - service_smb_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_smb_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80277-7

- name: Unit Socket Exists - smb.socket
  command: systemctl list-unit-files smb.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - service_smb_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_smb_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80277-7

- name: Disable socket smb
  systemd:
    name: smb.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"smb.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - service_smb_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_smb_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80277-7

- name: Disable service dhcpd
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service dhcpd
    systemd:
      name: dhcpd.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"dhcpd.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_dhcpd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_dhcpd_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80330-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Unit Socket Exists - dhcpd.socket
  command: systemctl list-unit-files dhcpd.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_dhcpd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_dhcpd_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80330-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable socket dhcpd
  systemd:
    name: dhcpd.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"dhcpd.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_dhcpd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_dhcpd_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80330-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable service rpcbind
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service rpcbind
    systemd:
      name: rpcbind.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"rpcbind.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_rpcbind_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rpcbind_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80230-6

- name: Unit Socket Exists - rpcbind.socket
  command: systemctl list-unit-files rpcbind.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_rpcbind_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rpcbind_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80230-6

- name: Disable socket rpcbind
  systemd:
    name: rpcbind.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"rpcbind.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_rpcbind_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rpcbind_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80230-6

- name: Disable service nfs
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service nfs
    systemd:
      name: nfs.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"nfs.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_nfs_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_nfs_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80237-1
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Unit Socket Exists - nfs.socket
  command: systemctl list-unit-files nfs.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_nfs_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_nfs_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80237-1
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable socket nfs
  systemd:
    name: nfs.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"nfs.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_nfs_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_nfs_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80237-1
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Test for existence /etc/ssh/sshd_config
  stat:
    path: /etc/ssh/sshd_config
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - file_owner_sshd_config | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_sshd_config
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82899-6
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure owner 0 on /etc/ssh/sshd_config
  file:
    path: /etc/ssh/sshd_config
    owner: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - file_owner_sshd_config | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_sshd_config
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82899-6
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/ssh/sshd_config
  stat:
    path: /etc/ssh/sshd_config
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_permissions_sshd_config | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_sshd_config
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82895-4
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure permission 0600 on /etc/ssh/sshd_config
  file:
    path: /etc/ssh/sshd_config
    mode: '0600'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_permissions_sshd_config | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_sshd_config
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82895-4
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/ssh/sshd_config
  stat:
    path: /etc/ssh/sshd_config
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - file_groupowner_sshd_config | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_sshd_config
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82902-8
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure group owner 0 on /etc/ssh/sshd_config
  file:
    path: /etc/ssh/sshd_config
    group: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - file_groupowner_sshd_config | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_sshd_config
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82902-8
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Set LogLevel to INFO
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*LogLevel\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: LogLevel INFO
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - low_severity | bool
  - sshd_set_loglevel_info | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_set_loglevel_info
  - low_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80645-5
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)

- name: Enable Encrypted X11 Forwarding
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*X11Forwarding\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: X11Forwarding yes
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - sshd_enable_x11_forwarding | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_enable_x11_forwarding
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80226-4
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-171-3.1.13
  - DISA-STIG-RHEL-07-040710

- name: Enable SSH Warning Banner
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Banner\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: Banner /etc/issue
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_enable_warning_banner | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_enable_warning_banner
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27314-4
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(c)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.9
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-040170

- name: Set SSH Client Alive Max Count
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*ClientAliveCountMax\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: ClientAliveCountMax {{ var_sshd_set_keepalive }}
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_set_keepalive | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_set_keepalive
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27082-7
  - NIST-800-53-AC-2(5)
  - NIST-800-53-AC-12
  - NIST-800-53-AC-17(a)
  - NIST-800-53-SC-10
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.11
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-040340

- name: Allow Only SSH Protocol 2
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Protocol\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: Protocol 2
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - sshd_allow_only_protocol2 | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_allow_only_protocol2
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27320-1
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-53-SC-13
  - NIST-800-53-MA-4(6)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.5.4
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-040390

- name: Disable Host-Based Authentication
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*HostbasedAuthentication\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: HostbasedAuthentication no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - disable_host_auth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - disable_host_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27413-4
  - NIST-800-53-AC-3
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.12
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-010470

- name: Use Only FIPS 140-2 Validated MACs
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*MACs\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: MACs {{ sshd_approved_macs }}
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_use_approved_macs | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_use_approved_macs
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27455-5
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-SC-13
  - NIST-800-53-MA-4(6)
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.13.11
  - NIST-800-171-3.13.8
  - DISA-STIG-RHEL-07-040400

- name: Do Not Allow SSH Environment Options
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitUserEnvironment\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: PermitUserEnvironment no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_do_not_permit_user_env | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_do_not_permit_user_env
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27363-1
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.12
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-010460

- name: Disable SSH Access via Empty Passwords
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitEmptyPasswords\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: PermitEmptyPasswords no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_disable_empty_passwords | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_empty_passwords
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27471-2
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-010300

- name: Disable SSH Root Login
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitRootLogin\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: PermitRootLogin no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_disable_root_login | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_root_login
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27445-6
  - NIST-800-53-AC-6(2)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-IA-2
  - NIST-800-53-IA-2(5)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-040370

- name: Set SSH Idle Timeout Interval
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*ClientAliveInterval\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: ClientAliveInterval {{ sshd_idle_timeout_value }}
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_set_idle_timeout | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_set_idle_timeout
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27433-2
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-2(5)
  - NIST-800-53-AC-12
  - NIST-800-53-AC-17(a)
  - NIST-800-53-SC-10
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.11
  - PCI-DSS-Req-8.1.8
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-040320

- name: Use Only FIPS 140-2 Validated Ciphers
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Ciphers\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_use_approved_ciphers | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_use_approved_ciphers
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27295-5
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-SC-13
  - NIST-800-53-MA-4(6)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.13.11
  - NIST-800-171-3.13.8
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-040110

- name: Disable service squid
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service squid
    systemd:
      name: squid.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"squid.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_squid_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_squid_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80285-0

- name: Unit Socket Exists - squid.socket
  command: systemctl list-unit-files squid.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_squid_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_squid_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80285-0

- name: Disable socket squid
  systemd:
    name: squid.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"squid.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_squid_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_squid_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80285-0

- name: Ensure openldap-servers is removed
  package:
    name: openldap-servers
    state: absent
  tags:
  - package_openldap-servers_removed
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80293-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  when:
  - disable_strategy | bool
  - low_disruption | bool
  - low_severity | bool
  - no_reboot_needed | bool
  - low_complexity | bool

- name: Disable service vsftpd
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service vsftpd
    systemd:
      name: vsftpd.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"vsftpd.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - service_vsftpd_disabled | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_vsftpd_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80244-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Unit Socket Exists - vsftpd.socket
  command: systemctl list-unit-files vsftpd.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - service_vsftpd_disabled | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_vsftpd_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80244-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable socket vsftpd
  systemd:
    name: vsftpd.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"vsftpd.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - service_vsftpd_disabled | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_vsftpd_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80244-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable service avahi-daemon
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service avahi-daemon
    systemd:
      name: avahi-daemon.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"avahi-daemon.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_avahi-daemon_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80338-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Unit Socket Exists - avahi-daemon.socket
  command: systemctl list-unit-files avahi-daemon.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_avahi-daemon_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80338-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable socket avahi-daemon
  systemd:
    name: avahi-daemon.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"avahi-daemon.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_avahi-daemon_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80338-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable service cups
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service cups
    systemd:
      name: cups.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"cups.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_cups_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_cups_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80282-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Unit Socket Exists - cups.socket
  command: systemctl list-unit-files cups.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_cups_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_cups_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80282-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable socket cups
  systemd:
    name: cups.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"cups.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_cups_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_cups_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80282-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable service dovecot
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service dovecot
    systemd:
      name: dovecot.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"dovecot.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - service_dovecot_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_dovecot_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80294-2

- name: Unit Socket Exists - dovecot.socket
  command: systemctl list-unit-files dovecot.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - service_dovecot_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_dovecot_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80294-2

- name: Disable socket dovecot
  systemd:
    name: dovecot.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"dovecot.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - service_dovecot_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_dovecot_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80294-2

- name: Ensure telnet is removed
  package:
    name: telnet
    state: absent
  tags:
  - package_telnet_removed
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27305-2
  - NIST-800-171-3.1.13
  when:
  - package_telnet_removed | bool
  - no_reboot_needed | bool
  - disable_strategy | bool
  - low_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Disable service telnet
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service telnet
    systemd:
      name: telnet.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"telnet.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_telnet_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_telnet_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27401-9
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Unit Socket Exists - telnet.socket
  command: systemctl list-unit-files telnet.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_telnet_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_telnet_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27401-9
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Disable socket telnet
  systemd:
    name: telnet.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"telnet.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_telnet_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_telnet_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27401-9
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Ensure tcp_wrappers is installed
  package:
    name: tcp_wrappers
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - package_tcp_wrappers_installed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_tcp_wrappers_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27361-5
  - NIST-800-53-CM-6(a)

- name: Disable service xinetd
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service xinetd
    systemd:
      name: xinetd.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"xinetd.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_xinetd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_xinetd_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27443-1
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.7

- name: Unit Socket Exists - xinetd.socket
  command: systemctl list-unit-files xinetd.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_xinetd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_xinetd_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27443-1
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.7

- name: Disable socket xinetd
  systemd:
    name: xinetd.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"xinetd.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_xinetd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_xinetd_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27443-1
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.7

- name: Ensure talk-server is removed
  package:
    name: talk-server
    state: absent
  tags:
  - package_talk-server_removed
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27210-4
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure talk is removed
  package:
    name: talk
    state: absent
  tags:
  - package_talk_removed
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27432-4
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - package_talk_removed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure rsh is removed
  package:
    name: rsh
    state: absent
  tags:
  - package_rsh_removed
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27274-0
  - NIST-800-171-3.1.13
  when:
  - package_rsh_removed | bool
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Disable service rlogin
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service rlogin
    systemd:
      name: rlogin.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"rlogin.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_rlogin_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rlogin_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27336-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Unit Socket Exists - rlogin.socket
  command: systemctl list-unit-files rlogin.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_rlogin_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rlogin_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27336-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Disable socket rlogin
  systemd:
    name: rlogin.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"rlogin.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_rlogin_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rlogin_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27336-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Disable service rsh
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service rsh
    systemd:
      name: rsh.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"rsh.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - service_rsh_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rsh_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27337-5
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Unit Socket Exists - rsh.socket
  command: systemctl list-unit-files rsh.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - service_rsh_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rsh_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27337-5
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Disable socket rsh
  systemd:
    name: rsh.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"rsh.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - service_rsh_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rsh_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27337-5
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Disable service rexec
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service rexec
    systemd:
      name: rexec.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"rexec.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_rexec_disabled | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rexec_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27408-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Unit Socket Exists - rexec.socket
  command: systemctl list-unit-files rexec.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_rexec_disabled | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rexec_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27408-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Disable socket rexec
  systemd:
    name: rexec.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"rexec.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_rexec_disabled | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rexec_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27408-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- block:
  - name: Detect shosts.equiv Files on the System
    find:
      paths: /
      recurse: true
      patterns: shosts.equiv
    check_mode: false
    register: shosts_equiv_locations
  - name: Remove Rsh Trust Files
    file:
      path: '{{ item.path }}'
      state: absent
    with_items: '{{ shosts_equiv_locations.files }}'
    when: shosts_equiv_locations
  tags:
  - no_rsh_trust_files
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27406-8
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - low_disruption | bool
  - no_rsh_trust_files | bool
  - low_complexity | bool

- name: Disable service tftp
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service tftp
    systemd:
      name: tftp.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"tftp.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - service_tftp_disabled | bool
  - high_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_tftp_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80212-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Unit Socket Exists - tftp.socket
  command: systemctl list-unit-files tftp.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - service_tftp_disabled | bool
  - high_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_tftp_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80212-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable socket tftp
  systemd:
    name: tftp.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"tftp.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - service_tftp_disabled | bool
  - high_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_tftp_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80212-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Ensure ypserv is removed
  package:
    name: ypserv
    state: absent
  tags:
  - package_ypserv_removed
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27399-5
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - DISA-STIG-RHEL-07-020010
  when:
  - package_ypserv_removed | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure ypbind is removed
  package:
    name: ypbind
    state: absent
  tags:
  - package_ypbind_removed
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27396-1
  when:
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - package_ypbind_removed | bool
  - low_complexity | bool

- name: Disable service named
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service named
    systemd:
      name: named.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"named.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_named_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_named_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80325-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Unit Socket Exists - named.socket
  command: systemctl list-unit-files named.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_named_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_named_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80325-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable socket named
  systemd:
    name: named.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"named.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_named_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_named_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80325-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Ensure mail transfer agent is configured for local-only mode
  lineinfile:
    path: /etc/postfix/main.cf
    create: false
    regexp: ^inet_interfaces\s*=\s.*
    line: inet_interfaces = {{ var_postfix_inet_interfaces }}
    state: present
    insertafter: ^inet_interfaces\s*=\s.*
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - postfix_network_listening_disabled | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - postfix_network_listening_disabled
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80289-2
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable service snmpd
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service snmpd
    systemd:
      name: snmpd.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"snmpd.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_snmpd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_snmpd_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80274-4

- name: Unit Socket Exists - snmpd.socket
  command: systemctl list-unit-files snmpd.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_snmpd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_snmpd_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80274-4

- name: Disable socket snmpd
  systemd:
    name: snmpd.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"snmpd.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_snmpd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_snmpd_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80274-4

- name: Disable service rhnsd
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service rhnsd
    systemd:
      name: rhnsd.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"rhnsd.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_severity | bool
  - service_rhnsd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rhnsd_disabled
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80269-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Unit Socket Exists - rhnsd.socket
  command: systemctl list-unit-files rhnsd.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_severity | bool
  - service_rhnsd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rhnsd_disabled
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80269-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable socket rhnsd
  systemd:
    name: rhnsd.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"rhnsd.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_severity | bool
  - service_rhnsd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rhnsd_disabled
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80269-4
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable service httpd
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service httpd
    systemd:
      name: httpd.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"httpd.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - service_httpd_disabled | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_httpd_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80300-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Unit Socket Exists - httpd.socket
  command: systemctl list-unit-files httpd.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - service_httpd_disabled | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_httpd_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80300-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable socket httpd
  systemd:
    name: httpd.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"httpd.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - service_httpd_disabled | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_httpd_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80300-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Enable service crond
  block:
  - name: Gather the package facts
    package_facts:
      manager: auto
  - name: Enable service crond
    service:
      name: crond
      enabled: 'yes'
      state: started
    when:
    - '"cronie" in ansible_facts.packages'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_crond_enabled | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_crond_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27323-5
  - NIST-800-53-CM-6(a)

- name: Test for existence /etc/cron.d/
  stat:
    path: /etc/cron.d/
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_permissions_cron_d | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_cron_d
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82276-7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure permission 0700 on /etc/cron.d/
  file:
    path: /etc/cron.d/
    mode: '0700'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_permissions_cron_d | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_cron_d
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82276-7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/crontab
  stat:
    path: /etc/crontab
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_permissions_crontab | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_crontab
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82205-6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure permission 0600 on /etc/crontab
  file:
    path: /etc/crontab
    mode: '0600'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_permissions_crontab | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_crontab
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82205-6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/cron.daily/
  stat:
    path: /etc/cron.daily/
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_permissions_cron_daily | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_cron_daily
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82239-5
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure permission 0700 on /etc/cron.daily/
  file:
    path: /etc/cron.daily/
    mode: '0700'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_permissions_cron_daily | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_cron_daily
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82239-5
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/cron.monthly/
  stat:
    path: /etc/cron.monthly/
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_groupowner_cron_monthly | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_cron_monthly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82255-1
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure group owner 0 on /etc/cron.monthly/
  file:
    path: /etc/cron.monthly/
    group: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_groupowner_cron_monthly | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_cron_monthly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82255-1
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/cron.monthly/
  stat:
    path: /etc/cron.monthly/
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_permissions_cron_monthly | bool
  - configure_strategy | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_cron_monthly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82262-7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure permission 0700 on /etc/cron.monthly/
  file:
    path: /etc/cron.monthly/
    mode: '0700'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_permissions_cron_monthly | bool
  - configure_strategy | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_cron_monthly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82262-7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/crontab
  stat:
    path: /etc/crontab
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - file_groupowner_crontab | bool
  - low_complexity | bool
  tags:
  - file_groupowner_crontab
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82222-1
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure group owner 0 on /etc/crontab
  file:
    path: /etc/crontab
    group: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - file_groupowner_crontab | bool
  - low_complexity | bool
  tags:
  - file_groupowner_crontab
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82222-1
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/cron.weekly/
  stat:
    path: /etc/cron.weekly/
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - file_permissions_cron_weekly | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_cron_weekly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82250-2
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure permission 0700 on /etc/cron.weekly/
  file:
    path: /etc/cron.weekly/
    mode: '0700'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - file_permissions_cron_weekly | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_cron_weekly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82250-2
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/cron.daily/
  stat:
    path: /etc/cron.daily/
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - file_owner_cron_daily | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_cron_daily
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82236-1
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure owner 0 on /etc/cron.daily/
  file:
    path: /etc/cron.daily/
    owner: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - file_owner_cron_daily | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_cron_daily
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82236-1
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/cron.weekly/
  stat:
    path: /etc/cron.weekly/
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_owner_cron_weekly | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_cron_weekly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82246-0
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure owner 0 on /etc/cron.weekly/
  file:
    path: /etc/cron.weekly/
    owner: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_owner_cron_weekly | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_cron_weekly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82246-0
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/cron.d/
  stat:
    path: /etc/cron.d/
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_owner_cron_d | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_cron_d
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82270-0
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure owner 0 on /etc/cron.d/
  file:
    path: /etc/cron.d/
    owner: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_owner_cron_d | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_cron_d
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82270-0
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/cron.daily/
  stat:
    path: /etc/cron.daily/
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - file_groupowner_cron_daily | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_cron_daily
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82232-0
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure group owner 0 on /etc/cron.daily/
  file:
    path: /etc/cron.daily/
    group: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - file_groupowner_cron_daily | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_cron_daily
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82232-0
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/cron.hourly/
  stat:
    path: /etc/cron.hourly/
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_groupowner_cron_hourly | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_cron_hourly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82226-2
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure group owner 0 on /etc/cron.hourly/
  file:
    path: /etc/cron.hourly/
    group: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_groupowner_cron_hourly | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_cron_hourly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82226-2
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/cron.weekly/
  stat:
    path: /etc/cron.weekly/
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_groupowner_cron_weekly | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_cron_weekly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82242-9
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure group owner 0 on /etc/cron.weekly/
  file:
    path: /etc/cron.weekly/
    group: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_groupowner_cron_weekly | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_cron_weekly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82242-9
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/cron.d/
  stat:
    path: /etc/cron.d/
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_groupowner_cron_d | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_cron_d
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82265-0
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure group owner 0 on /etc/cron.d/
  file:
    path: /etc/cron.d/
    group: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_groupowner_cron_d | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_cron_d
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82265-0
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/cron.hourly/
  stat:
    path: /etc/cron.hourly/
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_permissions_cron_hourly | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - configure_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_cron_hourly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82229-6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure permission 0700 on /etc/cron.hourly/
  file:
    path: /etc/cron.hourly/
    mode: '0700'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_permissions_cron_hourly | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - configure_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_cron_hourly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82229-6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/cron.monthly/
  stat:
    path: /etc/cron.monthly/
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_owner_cron_monthly | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_cron_monthly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82259-3
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure owner 0 on /etc/cron.monthly/
  file:
    path: /etc/cron.monthly/
    owner: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_owner_cron_monthly | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_cron_monthly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82259-3
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/crontab
  stat:
    path: /etc/crontab
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_owner_crontab | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_crontab
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82217-1
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure owner 0 on /etc/crontab
  file:
    path: /etc/crontab
    owner: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_owner_crontab | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_crontab
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82217-1
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/cron.hourly/
  stat:
    path: /etc/cron.hourly/
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_owner_cron_hourly | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_cron_hourly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82208-0
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure owner 0 on /etc/cron.hourly/
  file:
    path: /etc/cron.hourly/
    owner: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_owner_cron_hourly | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_cron_hourly
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82208-0
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
